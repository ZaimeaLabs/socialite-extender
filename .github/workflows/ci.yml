name: CI

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  actions: write

jobs:
  tests:
    name: Run tests (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.2]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, xml, curl, sqlite, zip, bcmath
          ini-values: |
            memory_limit = -1

      - name: Get composer cache dir
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-php${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-php${{ matrix.php }}-

      - name: Install system deps
        run: sudo apt-get update -y && sudo apt-get install -y git unzip

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Create sqlite file (if needed)
        run: |
          mkdir -p database || true
          touch database/database.sqlite || true

      - name: Create .env only if example exists
        run: |
          if [ -f .env.example ]; then
            cp .env.example .env || true
            echo ".env created from .env.example"
          else
            echo "No .env.example found â€” package mode (skipping .env creation)"
          fi

      - name: Run tests (PHPUnit / Pest)
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
        run: |
          if [ -f vendor/bin/pest ] && grep -q "pestphp/pest" composer.json; then
            vendor/bin/pest --stop-on-failure --colors=always
          else
            vendor/bin/phpunit --colors=always --testdox
          fi

  coverage:
    name: Coverage (generate and upload coverage.xml)
    runs-on: ubuntu-latest
    needs: tests
    strategy:
      matrix:
        php: [8.2]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP (with xdebug)
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: xdebug
          coverage: xdebug
          ini-values: |
            memory_limit = -1

      - name: Install Composer deps
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

      - name: Create sqlite file for coverage
        run: |
          mkdir -p database || true
          touch database/database.sqlite || true

      - name: Run phpunit with coverage
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
        run: |
          vendor/bin/phpunit --colors=always --testdox --coverage-clover=coverage.xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
